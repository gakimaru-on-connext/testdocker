---

#------------------------------------------------------------
# Super-user block
- name: setup_os_user_by_super_user
  become: true
  become_user: "{{ become_super_user }}"
  #ignore_errors: true
  block:

    #------------------------------------------------------------
    - name: create_project_group
      group:
        name: "{{ proj_group }}"

    #------------------------------------------------------------
    - name: create_project_user
      user:
        name: "{{ proj_user }}"
        group: "{{ proj_group }}"
        groups: "{{ proj_groups }}"
        shell: /bin/bash
        home: "{{ proj_user_home }}"
        generate_ssh_key: "{{ proj_user_generate_ssh_key }}"
        state: present

    #------------------------------------------------------------
    - name: create_project_user_dir
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ proj_user }}"
        group: "{{ proj_group }}"
        mode: 0700
      with_items:
        - "{{ proj_user_home }}/.ansible"
        - "{{ proj_user_home }}/.ansible/tmp"
        - "{{ proj_user_home }}/.cache"
        - "{{ proj_user_home }}/.ssh"
        - "{{ proj_user_home }}/.ssh/config.d"

    #----------------------------------------------------------
    - name: change_project_user_owner
      file:
        path: "{{ item }}"
        owner: "{{ proj_user }}"
        group: "{{ proj_group }}"
        mode: "u+rwX,go-rwx"
        recurse: true
      with_items:
        - "{{ proj_user_home }}/.ansible"
        - "{{ proj_user_home }}/.cache"

    #------------------------------------------------------------
    - name: setup_project_user_ssh_config
      lineinfile:
        dest: "{{ proj_user_home }}/.ssh/config"
        insertbefore: BOF
        line: "Include config.d/*"
        owner: "{{ proj_user }}"
        group: "{{ proj_group }}"
        mode: 0600
        create: true
        state: present

    #------------------------------------------------------------
    # AuthorizedKeys block
    - name: setup_project_user_authorized_keys
      when: proj_user_with_authorized_keys is defined
        and proj_user_with_authorized_keys == true
      block:

        #------------------------------------------------------------
        - name: add_authorized_keys_on_project_user
          authorized_key:
            user: "{{ proj_user }}"
            state: present
            #exclusive: true
            key: "{{ lookup('pipe', 'cat {{ role_path }}/authorized_keys/add/*.pub') }}"

        #------------------------------------------------------------
        - name: delete_authorized_keys_on_project_user
          authorized_key:
            user: "{{ proj_user }}"
            state: absent
            key: "{{ lookup('pipe', 'cat {{ role_path }}/authorized_keys/del/*.pub') }}"

    #------------------------------------------------------------
    - name: install_project_user_sudoer
      template:
        src: sudoers-user.j2
        dest: "/etc/sudoers.d/{{ proj_user }}"
        mode: 0440
      when: proj_user_sudoer is defined
        and proj_user_sudoer == true

    #------------------------------------------------------------
    - name: copy_project_user_bashrc_ext
      template:
        src: ".bashrc.ext.j2"
        dest: "{{ proj_user_home }}/.bashrc.ext"
        owner: "{{ proj_user }}"
        group: "{{ proj_group }}"
        mode: 0440

    #------------------------------------------------------------
    - name: setup_project_user_bashrc
      lineinfile:
        dest: "{{ proj_user_home }}/.bashrc"
        insertafter: EOF
        line: "source ~/.bashrc.ext"

#------------------------------------------------------------
# EOF
